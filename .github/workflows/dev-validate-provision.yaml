name: validates configuration without resource creation

on:
  pull_request:
    branches:
      - develop

jobs:
  provision:
    environment: develop
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Azure Developer CLI manually
        run: |
          curl -fsSL https://aka.ms/install-azd.sh | bash

      - name: Verify azd installation
        run: azd version

      - name: Log in with Azure (Client Credentials)
        if: ${{ env.AZURE_CREDENTIALS != '' }}
        run: |
          $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable;
          Write-Host "::add-mask::$($info.clientSecret)"

          azd auth login `
            --client-id "$($info.clientId)" `
            --client-secret "$($info.clientSecret)" `
            --tenant-id "$($info.tenantId)"
        shell: pwsh
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Refresh Environment
        run: azd env refresh --no-prompt
        env:
          # Core Azure Settings
          AZURE_ENV_NAME: "develop-clew"
          AZURE_LOCATION: "eastus"
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

          # Required Password Parameters
          AZURE_VM_USER_INITIAL_PASSWORD: ${{ secrets.VM_USER_INITIAL_PASSWORD }}
          AZURE_WEBAPP_AAD_CLIENT_SECRET: ${{ secrets.AAD_CLIENT_SECRET }}
          AZURE_WEBAPP_AAD_RESET_PASSWORD: ${{ secrets.AAD_RESET_PASSWORD }}
          AZURE_WEBAPP_EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}

          # Stripe Integration
          STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
          STRIPE_SIGNING_SECRET: ${{ secrets.STRIPE_SIGNING_SECRET }}
          STRIPE_PRODUCT_ID: ${{ secrets.STRIPE_PRODUCT_ID }}
          STRIPE_FA_PRICE_ID: ${{ secrets.STRIPE_FA_PRICE_ID }}

          # Azure AD B2C Configuration
          AZURE_WEBAPP_AAD_TENANT_NAME: ${{ secrets.AAD_TENANT_NAME }}
          AZURE_WEBAPP_AAD_TENANT_ID: ${{ secrets.AAD_TENANT_ID }}
          AZURE_WEBAPP_AAD_CHANGE: ${{ secrets.AAD_CHANGE }}
          AZURE_WEBAPP_AAD_CLIENT_ID: ${{ secrets.AAD_CLIENT_ID }}
          AZURE_WEBAPP_AAD_POLICY_NAME: ${{ secrets.AAD_POLICY_NAME }}
          AZURE_WEBAPP_AAD_REDIRECT_URI: ${{ secrets.AAD_REDIRECT_URI }}
          AZURE_WEBAPP_AAD_AUTHORITY: ${{ secrets.AAD_AUTHORITY }}
          AZURE_WEBAPP_AAD_EDIT_PROFILE: ${{ secrets.AAD_EDIT_PROFILE }}

          # Email Configuration
          AZURE_WEBAPP_EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          AZURE_WEBAPP_EMAIL_USER: ${{ secrets.EMAIL_USER }}
          AZURE_WEBAPP_INVITATION_LINK: ${{ secrets.INVITATION_LINK }}

          # Azure Service Keys
          AZURE_AI_SEARCH_API_KEY: ${{ secrets.AI_SEARCH_API_KEY }}
          AZURE_OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

          # Orchestrator Settings
          TAVILY_API_KEY: ${{ secrets.TAVILY_API_KEY }}
          AZURE_FUNCTIONS_WORKER_RUNTIME: "python"
          SERPER_API_KEY: ${{ secrets.SERPER_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}

          # LangSmith Settings
          LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
          LANGCHAIN_PROJECT: ${{ secrets.LANGCHAIN_PROJECT }}
          LANGCHAIN_ENDPOINT: ${{ secrets.LANGCHAIN_ENDPOINT }}
          LANGCHAIN_TRACING_V2: ${{ secrets.LANGCHAIN_TRACING_V2 }}

          # MCP
          AGENT_MODEL: ${{ secrets.AGENT_MODEL }}
          FILE_SELECTION_MODEL: ${{ secrets.FILE_SELECTION_MODEL }}
          FILE_SELECTION_REASONING_EFFORT: ${{ secrets.FILE_SELECTION_REASONING_EFFORT }}
          MODEL_API_VERSION: ${{ secrets.MODEL_API_VERSION }}
